/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.BranchAdminRole;

import Business.Department.Department;
import Business.Department.DepartmentDirectory;
import Business.Ecosystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.MacAddress.MacAddress;
import Business.Network.Customer;
import Business.Role.BranchManager;
import Business.UserAccount.Useraccount;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Random;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin01
 */
public class ManageCustomerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomerJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    Ecosystem system;

    ManageCustomerJPanel(JPanel userProcessContainer, Enterprise enterprise,Ecosystem system) {
        initComponents(); 
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.system=system;
        Random ran = new Random();
        long code= (long)(100000 + ran.nextInt(900000));
        txtVPNCode.setText(String.valueOf(code));
        String macaddress=(String)"Server" + code;
        txtMacAddress.setText(macaddress);
        Random ran1 = new Random();
         long code1= (long)(100000 + ran1.nextInt(9000000));
         
         txtSSN.setText(String.valueOf(code1));
         txtSSN.setEnabled(false);
         
        Random random = new Random();
        char[] CHARSET_AZ_09 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789".toCharArray();
        char[] result = new char[6];
         for (int i = 0; i < result.length; i++) {
        int randomCharIndex = random.nextInt(6);
        result[i]=CHARSET_AZ_09[randomCharIndex];
        System.out.println(result[i]);
        
         }
        passwordJTextField.setText(String.valueOf(result));
        passwordJTextField.setEnabled(false);

        
    }
//    public void populateOrganizationComboBox(){
//        organizationJComboBox.removeAllItems();
//        
//        for (Department department : departmentDirectory.getDepartmentList()){
//            organizationJComboBox.addItem(department);
//        }
//    }
//    public void populateOrganizationEmpComboBox(){
//        organizationEmpJComboBox.removeAllItems();
//        
//        for (Department department : departmentDirectory.getDepartmentList()){
//            organizationEmpJComboBox.addItem(department);
//        }
//    }

    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtSSN = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCustomerId = new javax.swing.JTextField();
        txtYearlyIncome = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPhNo = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        txtZipcode = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtStreet = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtEmailId = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        nameJTextField1 = new javax.swing.JTextField();
        passwordJTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtVPNCode = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtMacAddress = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        toDateCombo = new datechooser.beans.DateChooserCombo();

        setBackground(new java.awt.Color(20, 45, 69));

        addJButton.setBackground(new java.awt.Color(0, 0, 51));
        addJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addJButton.setForeground(new java.awt.Color(255, 255, 255));
        addJButton.setText("Create Customer");
        addJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(0, 0, 51));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("First Name");

        nameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameJTextFieldKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Last Name");

        txtLastName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLastNameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SSN");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Yearly Income");

        txtSSN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSSNActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Customer Id");

        txtCustomerId.setText("System-Generated");
        txtCustomerId.setEnabled(false);

        txtYearlyIncome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtYearlyIncomeKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Phone number");

        txtPhNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPhNoKeyPressed(evt);
            }
        });

        txtState.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStateKeyPressed(evt);
            }
        });

        txtZipcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtZipcodeKeyPressed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Zipcode");

        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Street");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("City");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("State");

        txtStreet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStreetKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Email Id:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("User Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Password");

        txtVPNCode.setEnabled(false);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("VPN Code:");

        txtMacAddress.setEnabled(false);
        txtMacAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMacAddressActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Mac address");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Birth Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(11, 11, 11)
                        .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSSN)
                            .addComponent(txtYearlyIncome)
                            .addComponent(txtPhNo, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtLastName)
                                                .addComponent(nameJTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                                .addComponent(txtEmailId))
                                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 1, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(159, 159, 159)))
                                .addGap(58, 58, 58))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(93, 93, 93)
                                .addComponent(txtCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(17, 17, 17)
                                            .addComponent(addJButton))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel15)
                                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(23, 23, 23)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtMacAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                                .addComponent(txtVPNCode)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel5)
                                                .addComponent(jLabel4))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(nameJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(49, 49, 49)
                                        .addComponent(toDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(355, 355, 355))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(backJButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSSN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCustomerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtYearlyIncome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPhNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16))
                    .addComponent(toDateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStreet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(nameJTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(backJButton)
                            .addComponent(addJButton))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMacAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtVPNCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJButtonActionPerformed

        //Department department = (Department) organizationEmpJComboBox.getSelectedItem();
        String fname = nameJTextField.getText();
        String lname=txtLastName.getText();
        String street=txtStreet.getText();
        String city=txtCity.getText();
        String state=txtState.getText();
        
        long ssn=Long.parseLong(txtSSN.getText());
        String toDate = toDateCombo.getText();
        DateFormat format = new SimpleDateFormat("MM/dd/yy", Locale.ENGLISH);
        Date selectedToDate = null;
        

        //Date dob=tx
        
        
        String userName = nameJTextField1.getText();
        String password = passwordJTextField.getText();
        String macaddress=txtMacAddress.getText();
        long vpn=Long.parseLong(txtVPNCode.getText());
        String username=nameJTextField1.getText();
        if(fname.isEmpty() || lname.isEmpty() || street.isEmpty() || city.isEmpty() | state.isEmpty() || userName.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Please enter all details!","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
        boolean result1=enterprise.getUserAccountDirectory().checkIfUsernameIsUnique(userName);
       
       if(result1==true)
       {
           
//           Customer customer=enterprise.getCustomerDirectory().createCustomer(fname,lname,ssn,phno,income);
//        customer.setCity(txtCity.getText().trim());
//        customer.setEmailId(txtEmailId.getText().trim());
//        customer.setState(txtState.getText().trim());
//        customer.setStreet(txtStreet.getText());
//        customer.setZipcode(Long.parseLong(txtZipcode.getText()));
        try
        {
            long zipcode=Long.parseLong(txtZipcode.getText());
            long phno=Long.parseLong(txtPhNo.getText());
        double income=Double.parseDouble(txtYearlyIncome.getText());
        if(txtPhNo.getText().length()!=10)
        {
            JOptionPane.showMessageDialog(null, "Please enter 10 digit phone number","Warning",JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Pattern  pattern;
               Matcher matcher;

               final String EMAIL_PATTERN = 
    "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
    + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
               pattern = Pattern.compile(EMAIL_PATTERN);
               String emailid=txtEmailId.getText();
                matcher = pattern.matcher(emailid);
                if(matcher.matches())
                {
//            Customer customer=enterprise.getCustomerDirectory().createCustomer(fname,lname,ssn,phno,income);
//        customer.setCity(txtCity.getText().trim());
//        customer.setEmailId(txtEmailId.getText().trim());
//        customer.setState(txtState.getText().trim());
//        customer.setStreet(txtStreet.getText());
//        customer.setZipcode(Long.parseLong(txtZipcode.getText()));
        selectedToDate = format.parse(toDate);
        if(selectedToDate.before(new Date()))
        {
            
          
            Customer customer=enterprise.getCustomerDirectory().createCustomer(fname,lname,ssn,phno,income);
        customer.setCity(txtCity.getText().trim());
        customer.setEmailId(txtEmailId.getText().trim());
        customer.setState(txtState.getText().trim());
        customer.setStreet(txtStreet.getText());
        customer.setZipcode(Long.parseLong(txtZipcode.getText()));
        customer.setDOB(selectedToDate);
        MacAddress macAddress=enterprise.getMacAddressDirectory().createMacAddress(macaddress, vpn);
          Useraccount account=enterprise.getUserAccountDirectory().createCustomerUserAccount(userName, password, customer);
          account.setMacAddress(macAddress);
          JOptionPane.showMessageDialog(null, "Customer created successfully","Information",JOptionPane.INFORMATION_MESSAGE);
          txtCity.setText("");
          txtEmailId.setText("");
          txtLastName.setText("");
          txtYearlyIncome.setText("");
          txtPhNo.setText("");
          nameJTextField.setText("");
          nameJTextField1.setText("");
          txtStreet.setText("");
          txtState.setText("");
          txtZipcode.setText("");
          
        }
        else
        {
           JOptionPane.showMessageDialog(null, "**Birthdate should be past date","Warning",JOptionPane.WARNING_MESSAGE);
        }
                }
                else
                {
                 JOptionPane.showMessageDialog(null, "**Please enter valid emailid","Warning",JOptionPane.WARNING_MESSAGE);   
                }
        }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, "Please enter valid details","Warning",JOptionPane.WARNING_MESSAGE);
            return;
        }
//            MacAddress macAddress=enterprise.getMacAddressDirectory().createMacAddress(macaddress, vpn);
//          Useraccount account=enterprise.getUserAccountDirectory().createCustomerUserAccount(userName, password, customer);
//          account.setMacAddress(macAddress);
//          JOptionPane.showMessageDialog(null, "Customer created successfully","Information",JOptionPane.INFORMATION_MESSAGE);
       }
       else
       {
          JOptionPane.showMessageDialog(null, "Username already exist!!","Warning",JOptionPane.WARNING_MESSAGE); 
          return;
       }
        } 
        
        
        //Useraccount account = enterprise.getUserAccountDirectory().createUserAccount(username, password, employee, new BranchManager());
      // account.setMacAddress(macAddress);
        
        
        
    }//GEN-LAST:event_addJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void txtSSNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSSNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSSNActionPerformed

    private void txtMacAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMacAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMacAddressActionPerformed

    private void txtYearlyIncomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtYearlyIncomeKeyPressed
        // TODO add your handling code here:
        int event =evt.getKeyCode();
        if((event>=evt.VK_0 && event<=evt.VK_9) || event ==evt.VK_BACK_SPACE || (event>=evt.VK_NUMPAD0 && event<=evt.VK_NUMPAD9))
        {
            txtYearlyIncome.setEditable(true);
            
        }
        else
        {
            txtYearlyIncome.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid income","Warning",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_txtYearlyIncomeKeyPressed

    private void txtPhNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhNoKeyPressed
        // TODO add your handling code here:
        int event =evt.getKeyCode();
        if((event>=evt.VK_0 && event<=evt.VK_9) || event ==evt.VK_BACK_SPACE || (event>=evt.VK_NUMPAD0 && event<=evt.VK_NUMPAD9))
        {
            txtPhNo.setEditable(true);
            
        }
        else
        {
            txtPhNo.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid phone number","Warning",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_txtPhNoKeyPressed

    private void txtZipcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtZipcodeKeyPressed
        // TODO add your handling code here:
        int event =evt.getKeyCode();
        if((event>=evt.VK_0 && event<=evt.VK_9) || event ==evt.VK_BACK_SPACE || (event>=evt.VK_NUMPAD0 && event<=evt.VK_NUMPAD9))
        {
            txtZipcode.setEditable(true);
            
        }
        else
        {
            txtZipcode.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid zipcode","Warning",JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_txtZipcodeKeyPressed

    private void txtStateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStateKeyPressed
        // TODO add your handling code here:
        int event =evt.getKeyCode();
        if((event>=evt.VK_A && event<=evt.VK_Z) || event==evt.VK_SPACE || event ==evt.VK_BACK_SPACE || event==evt.VK_CAPS_LOCK || event==evt.VK_SHIFT) 
                
        {
            txtState.setEditable(true);
            
        }
        else
        {
            txtState.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid state","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtStateKeyPressed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        // TODO add your handling code here:
         int event =evt.getKeyCode();
        if((event>=evt.VK_A && event<=evt.VK_Z) || event==evt.VK_SPACE || event ==evt.VK_BACK_SPACE || event==evt.VK_CAPS_LOCK || event==evt.VK_SHIFT) 
                
        {
            txtCity.setEditable(true);
            
        }
        else
        {
            txtCity.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid city","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtCityKeyPressed

    private void txtStreetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStreetKeyPressed
        // TODO add your handling code here:
        int event =evt.getKeyCode();
        if((event>=evt.VK_A && event<=evt.VK_Z) || event ==evt.VK_BACK_SPACE || event>=evt.VK_CAPS_LOCK || event<=evt.VK_SHIFT)
        {
            txtStreet.setEditable(true);
            
        }
        else
        {
            txtStreet.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid street","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtStreetKeyPressed

    private void nameJTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameJTextFieldKeyPressed
        // TODO add your handling code here:
        int event =evt.getKeyCode();
        if((event>=evt.VK_A && event<=evt.VK_Z) || event==evt.VK_SPACE || event ==evt.VK_BACK_SPACE || event==evt.VK_CAPS_LOCK || event==evt.VK_SHIFT) 
                
        {
            nameJTextField.setEditable(true);
            
        }
        else
        {
            nameJTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid name","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_nameJTextFieldKeyPressed

    private void txtLastNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLastNameKeyPressed
        // TODO add your handling code here:
       int event =evt.getKeyCode();
        if((event>=evt.VK_A && event<=evt.VK_Z) || event==evt.VK_SPACE || event ==evt.VK_BACK_SPACE || event==evt.VK_CAPS_LOCK || event==evt.VK_SHIFT) 
                
        {
            txtLastName.setEditable(true);
            
        }
        else
        {
            txtLastName.setEditable(false);
            JOptionPane.showMessageDialog(null, "Please enter valid last name","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtLastNameKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JTextField nameJTextField1;
    private javax.swing.JTextField passwordJTextField;
    private datechooser.beans.DateChooserCombo toDateCombo;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCustomerId;
    private javax.swing.JTextField txtEmailId;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtMacAddress;
    private javax.swing.JTextField txtPhNo;
    private javax.swing.JTextField txtSSN;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JTextField txtVPNCode;
    private javax.swing.JTextField txtYearlyIncome;
    private javax.swing.JTextField txtZipcode;
    // End of variables declaration//GEN-END:variables
}
